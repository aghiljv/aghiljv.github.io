__NUXT_JSONP__("/blog/Processes for Better Software Volume 2", (function(a,b,c,d,e,f,g,h,i,j){return {data:[{blog:{name:i,titleImage:"020920\u002Fprocess2Title",briefdesc:j,toc:[],body:{type:"root",children:[{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Every engineer\u002Fdeveloper has the right to do their work the right way, not\n  necessarily the easy way.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  There are a lot of reasons a software fails to serve its intended purpose. But\n  most of them could be avoided if we implement the so called good practices\n  into the software development life-cycle.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:f,props:{},children:[{type:b,value:"1. Accurate understanding of end-user needs"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F020920\u002FuserNeeds.webp",alt:"Accurate understanding of end-user needs"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  No matter you are making software as a product or for a client, you have to\n  have a clear understanding of the end-user needs. Significant man hours have\n  gone to waste and so have many applications built during it just by failing to\n  understand the same. The end-user or client needs cannot usually be determined\n  by one single meeting. It requires good research and understanding the problem\n  statement first-hand. Then and only then we could try and solve the problem\n  more efficiently.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:f,props:{},children:[{type:b,value:"2. Taking it slow"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F020920\u002Fslow.webp",alt:"Taking it slow"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  “Slow and steady wins the race”. Sure, you could actually make the software\n  development process much faster, but usually at the expense of compromising\n  some vital steps. The applications developed skipping these “non-essential\n  steps” might sooner or later become a big problem. It might be true that you\n  could save the time and resources while building it in the first place. But,\n  when (not if) it comes back with bugs, it will cost you more of both.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:f,props:{},children:[{type:b,value:"3. Refactor"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F020920\u002Frefactor.webp",alt:"Refactor"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  There is usually the need to upgrade and maintain a software as time goes on.\n  Whenever you see the need and have the chance do not hesitate to refactor the\n  code. Refactoring will usually help create a code base with increased\n  readability, smooth execution, less bugs and higher performance.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:f,props:{},children:[{type:b,value:"4. Make code correct first and fast second"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F020920\u002FcorrectFirst.webp",alt:"Make code correct first and fast second"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Your primary focus should always be achieving the desired functionality. It\n  doesn’t matter how better the design or how fast the response is, if it cannot\n  produce appropriate output, that software is useless and a liability.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:f,props:{},children:[{type:b,value:"5. Using version control"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F020920\u002FversionControl.webp",alt:"Using version control"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Do not wait for the software to grow beyond a certain size to incorporate\n  version control applications such as GitHub or bitbucket. It is always a good\n  practice to create repositories from day one. Create branches and maintain it\n  responsibly. My method is to always keep at least three branches even for a\n  single engineer. One for release, one with the latest stable version and one\n  for the working copy. Any method would be good as long as it helps to keep a\n  backup as well as a smooth workflow.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Disclaimer : The views and opinions expressed in the text belong solely to the\n  author, and not necessarily to the author's employer, organisation, committee\n  or other group or individual.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]}]},dir:"\u002Fblogs",path:"\u002Fblogs\u002FProcesses for Better Software Volume 2",extension:".md",slug:i,createdAt:"2020-09-10T14:48:48.884Z",updatedAt:"2020-09-11T13:54:17.615Z"},title:i,description:j,ogImage:"\u002Fimg\u002Fblog\u002F020920\u002Fprocess2Title.jpg",params:{slug:i}}],fetch:[],mutations:[["pageTitle\u002Fset","BLOG"]]}}("element","text","\n","br","p","b","img","width: 100%","Processes for Better Software Volume 2","Best practices for software engineers continued")));