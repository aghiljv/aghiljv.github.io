__NUXT_JSONP__("/blog/Reflections%20on%20how%20we%20code", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){return {data:[{blog:{slug:f,name:f,titleImage:"051020\u002Ftitle",briefdesc:k,postDate:"October 04, 2020",blogNumber:27,toc:[{depth:l,text:i},{depth:l,text:j},{depth:2,text:m}],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"\n  It is no secret that different engineers or team of engineers have different\n  standards for what they consider as quality in code. Sometimes, some engineers\n  consider something as the way to do it. But that opinion might not be shared\n  by many others.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Now, there are a lot of things I mean from them like paradigms, how we\n  separate concerns or even whether using nested ternaries is good or bad. Not\n  just the use of semicolons, tabs vs. spaces or formatting. Most of these\n  preferences and ideals are influenced by our environments, technologies we use\n  and coworkers.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c}]},{type:b,tag:n,props:{},children:[{type:a,value:i}]},{type:a,value:c},{type:b,tag:e,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F051020\u002Fcoworkers.jpg",alt:i},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  In our careers, almost all of us will encounter people from many spectrums.\n  There will be people who are extremely motivated and passionate about what\n  they are building. Also, there are people who are just the opposite. Yes, it\n  is not just black and white, there is a lot of grey in between.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  No engineer can’t do it all by themselves. There might be someone who reads\n  this and having a smirk saying, I am a team of one or I code this many hours a\n  day, I turned my startup to unicorn all by myself. But you still might have\n  used open source frameworks or might have stumbled upon a problem and had\n  help. Point is, you have had help from other human beings. (Oh, if you have\n  done it without any of these. Respect!)\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  The people we work with, greatly influences the way we code. Certain\n  engineers, as all humans do, will have predilections. For example, whoever\n  started building the product might have loved a certain framework and would\n  have refused to let it go even though its time has come and gone long ago. Or\n  they didn’t like seeing style.css files in your project and done all the\n  styling with inline CSS. Now, you might have to follow through as this may be\n  the available option.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  But it goes beyond that. Even the choices of people working on the product\n  from another team will also mold your code. If you are a front-end engineer,\n  you will probably need some data. Those data will be usually from the back-end\n  engineers. They are going to tell you, how and when you are going to get it\n  and in which format. So, this will influence how you write your interactions\n  with the API and your data layer, if you might.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Also, if you are working with people who are significantly smarter, with more\n  experience and cares about us and our code getting better, you will find\n  yourself writing better code through time.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c}]},{type:b,tag:n,props:{},children:[{type:a,value:j}]},{type:a,value:c},{type:b,tag:e,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F051020\u002Fenvironment.jpg",alt:j},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Your priorities are going mainly to be a function of the size of your company\n  or your team. Consider two teams, one might be weighted under the bureaucracy\n  of middle or upper management and enterprise release cycles while the other\n  might be struggling to release a product before they run out of resources.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  The matter of urgency also contributes to this. If there isn’t any, you might\n  not get things done as quickly as you could have. Instead, you might write\n  more tests or write less future legacy codes. Now the following are how the\n  size of your team or company could influence your code.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:o},{type:b,tag:p,props:{},children:[{type:a,value:q}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F051020\u002Fsmall.jpg",alt:q},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  You have to get things done. This could mean you writing less unit tests. The\n  number of people who look and review your code will be less. There might not\n  even be a manual Quality Assurance before the release. You will have to find a\n  way to write less brittle code or find an efficient and effective way of\n  writing automation that delivers what it is supposed to.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  You will deal with legacy code more. You might be writing code that might have\n  to be thrown out completely and start over. Ideally you keep in mind that\n  every chunk of code has a timeline and you should write it accordingly.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:o},{type:b,tag:p,props:{},children:[{type:a,value:r}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{style:h,src:"\u002Fimg\u002Fblog\u002F051020\u002Fbig.jpg",alt:r},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Horizontal organisational structures are rare in big companies. This means\n  there could be someone on your team that will only merge code if it satisfies\n  their definition of ‘good code’. Now, this could be good or bad.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  You are most probably not in a hurry. Your output will be diminished. Your job\n  usually won’t be on the line because money is usually not an issue in an\n  established, profitable company.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  You will still have to work with legacy code. You might be dealing with\n  technologies that aren’t well documented or easy to work with. This will add\n  time to your work and make you slower.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  CI\u002FCD will just work if someone senior or more involved has done their job.\n  You wouldn’t have to spend time with the hassles around the infrastructure.\n  This could make you faster.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c}]},{type:b,tag:"h2",props:{},children:[{type:a,value:m}]},{type:a,value:c},{type:b,tag:e,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Disclaimer : The views and opinions expressed in the article belong solely to the\n  author, and not necessarily to the author's employer, organisation, committee\n  or other group or individual.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]}]},dir:"\u002Fblogs",path:"\u002Fblogs\u002FReflections on how we code",extension:".md",createdAt:"2022-03-06T07:59:46.474Z",updatedAt:"2022-03-06T09:08:13.134Z"},title:f,description:k,ogImage:"\u002Fimg\u002Fblog\u002F051020\u002Ftitle.jpg",params:{slug:f}}],fetch:{},mutations:[["pageTitle\u002Fset","BLOG"]]}}("text","element","\n","br","p","Reflections on how we code","img","width: 100%","Coworkers","Environmental influences","What are some of the factors that help the way we evolve as an engineer.",3,"Good engineers who learns constantly will observe radical changes in the way\n  they write code.","h3","\n  ","b","Small Companies","Big Companies")));